#### Custom Configuration ####
# Postgres
DATABASE_HOST=< some ip address >
DATABASE_USER=postgres
DATABASE_PASSWORD=< $ openssl rand -base64 32 >
DATABASE_NAME=postgres

# Redis
REDIS_PASSWORD=< $ openssl rand -hex 32 >

# Minio
MINIO_ROOT_USER=< ASCII of lenght 20 >
MINIO_ROOT_PASSWORD=< $ openssl rand -base64 32 >
STORAGE_REGION=ap-southeast-1
DIRECTUS_BUCKET_NAME=directus-uploads
MISCELLANEOUS_BUCKET_NAME=miscellaneous-uploads

# Directus
DIRECTUS_KEY=< $ uuidgen >
DIRECTUS_SECRET=< $ uuidgen >
DIRECTUS_STORAGE_ENDPOINT=< some base_url >
ADMIN_EMAIL=xxx@example.com
ADMIN_PASSWORD=< $ openssl rand -base64 32 >
DIRECTUS_PUBLIC_URL=< https://externally-accessible-url/ >
EMAIL_FROM=< For example : no-reply@example.com >
EMAIL_SMTP_HOST=< some ip address >
EMAIL_SMTP_PORT=587
EMAIL_SMTP_USER=< some username >
EMAIL_SMTP_PASSWORD=< some password >
EMAIL_SMTP_SECURE=false
STORAGE_FORCE_PATH_STYLE=true

AUTH_PROVIDERS="google"

AUTH_GOOGLE_DRIVER="openid"
AUTH_GOOGLE_CLIENT_ID="XXXX"
AUTH_GOOGLE_CLIENT_SECRET="XXXX"
AUTH_GOOGLE_ISSUER_URL="https://accounts.google.com"
AUTH_GOOGLE_IDENTIFIER_KEY="email"
AUTH_GOOGLE_ICON="google"
AUTH_GOOGLE_LABEL="Google"
AUTH_GOOGLE_ALLOW_PUBLIC_REGISTRATION="false" # This allows users to be automatically created on logins. Use "false" if you want to create users manually
AUTH_GOOGLE_DEFAULT_ROLE_ID="XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX" # Replace this with the Directus Role ID you would want for new users. If this is not properly configured, new users will not have access to Directus

#### After First Spawn of Directus
DIRECTUS_ACCESS_TOKEN=< Login to directus as admin and generate this >

#### After First Spawn of S3 ####
STORAGE_ACCESS_KEY_ID=< ASCII of lenght 20 >
STORAGE_SECRET_ACCESS_KEY=< $ openssl rand -base64 32 >